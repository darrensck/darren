{"meta":{"title":"Hexo","subtitle":"","description":"","author":"darrensck","url":"https://darrensck.github.io/darren","root":"/darren/"},"pages":[],"posts":[{"title":"","slug":"123","date":"2020-12-17T14:12:00.726Z","updated":"2020-12-17T14:14:17.826Z","comments":true,"path":"2020/12/17/123/","link":"","permalink":"https://darrensck.github.io/darren/2020/12/17/123/","excerpt":"","text":"linux tree pwd ls","categories":[],"tags":[]},{"title":"css背景设置","slug":"css背景设置","date":"2020-10-26T12:30:49.000Z","updated":"2020-10-26T16:00:07.626Z","comments":true,"path":"2020/10/26/css背景设置/","link":"","permalink":"https://darrensck.github.io/darren/2020/10/26/css%E8%83%8C%E6%99%AF%E8%AE%BE%E7%BD%AE/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"css元素显示模式","slug":"css元素显示模式","date":"2020-09-28T09:26:51.000Z","updated":"2020-10-05T05:14:32.119Z","comments":true,"path":"2020/09/28/css元素显示模式/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/28/css%E5%85%83%E7%B4%A0%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"#html元素一般分为块元素和行内元素(span)两种类型 #块元素 h1~h6 p div ul ol li #行内元素 a strong b ins #行内块元素 img input td #元素显示模式转换 #转换为块元素 a{display: block;} #转换为行内元素 div{display: inline;} #转换为行内块元素 span{display: inline-block;}","categories":[],"tags":[]},{"title":"css复合选择器","slug":"css复合选择器","date":"2020-09-28T08:05:29.000Z","updated":"2020-09-28T09:26:20.176Z","comments":true,"path":"2020/09/28/css复合选择器/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/28/css%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8/","excerpt":"","text":"#后代选择器(包含选择器) 父标签下的子标签改样式，可以多重查找 例： ol li a{ ​ color: red } 可以将父标签加类名，从而区分 .red li a{ ​ color: red } #子选择器 只能选择作为某元素的最近一级子元素 例： ol &gt;a{ ​ color: red } .red&gt;a{ ​ color: red } #并集选择器 可以选择多组标签，同时为他们定义相同的样式 例：div, ​ p, ​ .red li{ ​ color: red; ​ } #伪类选择器 用于向某些选择器添加特殊的效果，比如给链接添加特殊效果 例：（声明按照lvha顺序） a:link{} //选择所有未被访问的链接 a:visited{} //选择所有已被访问的标签 a:hover{} //选择鼠标指针位于其上的链接 a:active{} //选择活动链接（鼠标按下后还未弹起的链接） #focus伪类选择器 用于选取获得焦点的表单元素 例： input: focus{ background-color: red; color: blue; }","categories":[],"tags":[]},{"title":"css引入方式","slug":"css引入方式","date":"2020-09-27T06:03:07.000Z","updated":"2020-09-27T06:27:20.986Z","comments":true,"path":"2020/09/27/css引入方式/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/27/css%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/","excerpt":"","text":"#内部样式表（嵌入式引用） 将css代码写到html页面内部，将所有css代码抽取出来单独放到style标签中 #行内样式表 在元素标签内部的style属性中设置css样式，适用于修改简单样式 例：p style=”color: pink; font-size: 10px;” /p #外部样式表 样式单独写到css文件中，之后将css文件引入到heml页面 利用link标签将css文件引入","categories":[],"tags":[]},{"title":"css文本属性","slug":"css文本属性","date":"2020-09-26T13:13:37.000Z","updated":"2020-09-27T06:05:52.771Z","comments":true,"path":"2020/09/26/css文本属性/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/26/css%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7/","excerpt":"","text":"#水平对齐方式 text-align: left(默认); //right center #装饰文本 text-decoration: none(默认); //underline overline line-through #文本缩进 text-indent: 10px;(段落首行缩进10px,可以为负值)(em单位为当前文字大小相对单位,默认为1em) #行间距 line-height: 20px;(设置行间距为20px)","categories":[],"tags":[]},{"title":"cssfont属性","slug":"cssfont属性","date":"2020-09-26T07:00:01.000Z","updated":"2020-09-27T06:06:03.793Z","comments":true,"path":"2020/09/26/cssfont属性/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/26/cssfont%E5%B1%9E%E6%80%A7/","excerpt":"","text":"例： font-style: italic; font-weight: 100-900; font-size: 30px; font-family: ‘宋体’； #复合属性 例： font: italic 700 16px ‘Microsoft yahei’;(顺序不能更换,font-size和font-family属性不能缺省)","categories":[],"tags":[]},{"title":"css基础选择器","slug":"css基础选择器","date":"2020-09-25T13:51:27.000Z","updated":"2020-09-28T08:26:00.156Z","comments":true,"path":"2020/09/25/css基础选择器/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/25/css%E5%9F%BA%E7%A1%80%E9%80%89%E6%8B%A9%E5%99%A8/","excerpt":"","text":"#css选择器 #标签选择器 标签名{ } #类选择器 .类名{ } 标签处 class=”” 例: style .red{ color: red; font-size: xx px; } /style p class=”red” /p #类选择器-多类名 #id选择器 (不允许重复调用，其他属性与类选择器相同) 例：#id名{} 标签 id=”” #通配符选择器(统一选择器) 例：*{}","categories":[],"tags":[]},{"title":"html表单","slug":"html表单","date":"2020-09-20T15:29:47.000Z","updated":"2020-09-26T07:06:52.550Z","comments":true,"path":"2020/09/20/html表单/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/20/html%E8%A1%A8%E5%8D%95/","excerpt":"","text":"//一个完整的表单通常由表单域，表单控件（表单元素）和提示信息组成 #表单域 form 表单元素 /form (目的是将表单元素传送个后台) form属性：例 form action=”https://www.baidu.com&quot; action=”处理表单元素的服务器url地址” method=”get/post” name=”不同表单域名字” #表单元素 #input(简易交互表单元素) type属性: name属性: value属性: #label标签 (点击&amp;itlabel&amp;gt时，浏览器会自动将光标转到对应表单元素上) 例：label for=”name” 提示信息 /lable input type=”text” id=”name” #select(下拉表单元素 上述input的下属标签对select依然适用) 提示信息：select ​ option 选项 /option ​ option 选项 /option ​ /select #textarea(使用多行文本输入控件，可以输入更多文字) 提示信息：textarea //cols=”x”(一行可输入x字符数量) rows=”y”(可以输入y行) ​ 输入文本 ​ /textarea","categories":[],"tags":[]},{"title":"html列表","slug":"html列表","date":"2020-09-20T15:05:37.000Z","updated":"2020-09-26T07:21:00.805Z","comments":true,"path":"2020/09/20/html列表/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/20/html%E5%88%97%E8%A1%A8/","excerpt":"","text":"#列表标签 #无序列表 ul(不能放入除li外的标签) li /li li /li /ul #有序列表 ol(不能放入除li外的标签) li /li li /li /ol #自定义列表 dl(只能放入dt/dd) dt 文字 /dt (一个dt对应多个等等) dd /dd dd /dd (围绕dt进行说明) /dl","categories":[],"tags":[]},{"title":"html表格","slug":"html表格","date":"2020-09-20T14:09:25.000Z","updated":"2020-09-26T07:07:58.305Z","comments":true,"path":"2020/09/20/html表格/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/20/html%E8%A1%A8%E6%A0%BC/","excerpt":"","text":"#表格标签 table 用于定义表格的标签 /table tr 定义表格中的行 /tr td 定义单元格 /td th 表头单元格 /th #文字加粗，且居中显示 table 属性 table下一级 可分为 thead tbody 使代码段结构清晰 #合并单元格 属于td/th的属性 跨行合并：rowspan=”合并个数” 跨列合并：colspan=”合并个数” 1.判定跨行还是跨列 2.寻找目标单元格 行上 列左 3.删除多余单元格","categories":[],"tags":[]},{"title":"html笔记","slug":"html笔记","date":"2020-09-19T01:59:58.000Z","updated":"2020-09-27T06:07:58.038Z","comments":true,"path":"2020/09/19/html笔记/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/19/html%E7%AC%94%E8%AE%B0/","excerpt":"","text":"p 段落 /p &amp;nbsp空格 br/换行 hr/加入分割线 h1 /h1 — h6 /h6 标题显示 strong 加粗文字 /strong or b /b em 倾斜文字 /em or i /i del 删除线 /del or s /s ins 下划线 /ins or u /u div 大盒子 /div 一个独占一行 span 小盒子 /span 一行有可以多个 !–注释– ctrl+/ 快捷键添加注释符","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-09-15T15:14:30.072Z","updated":"2020-09-15T15:14:30.072Z","comments":true,"path":"2020/09/15/hello-world/","link":"","permalink":"https://darrensck.github.io/darren/2020/09/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}